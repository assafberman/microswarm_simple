Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport pickle\r\n\r\nimport numpy as np\r\nimport phi.field\r\nfrom phi.flow import *\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib.patches as patches\r\nfrom datetime import datetime\r\nimport matplotlib.colors as colors\r\nimport matplotlib.animation as animation\r\nimport glob\r\n\r\n# -------------- Parameter Definition -------------\r\nlength_x = 4  # m\r\nlength_y = 0.1  # m\r\nresolution = (400, 100)\r\ndx = length_x / resolution[0]  # m\r\ndy = length_y / resolution[1]  # m\r\nswarm_num_x = 5\r\nswarm_num_y = 5\r\nswarm_member_rad = 0.005  # m\r\ninflow_freq = 1  # Hz\r\ninflow_amplitude = 0.05  # m/s\r\ndiffusivity = 2.3e-09  # m^2/s\r\ndt = 0.05  # s\r\ntotal_time = 10  # s\r\n\r\n# -------------- Container Generation --------------\r\nbox = Box['x,y', 0:length_x, 0:length_y]\r\n\r\n# -------------- Swarm Generation ------------------\r\nswarm = []\r\n\r\n# for i in np.linspace(3.5, 3.8, swarm_num_x):\r\n#     for j in np.linspace(length_y / (swarm_num_y * 2), length_y - length_y / (swarm_num_y * 2), swarm_num_y):\r\n#         swarm.append(Obstacle(Sphere(x=i, y=j, radius=swarm_member_rad)))\r\n\r\n\r\n# -------------- Step Definition -------------------\r\ndef step(velocity_prev, dt, t):\r\n    velocity_tent = advect.semi_lagrangian(velocity_prev, velocity_prev, dt)\r\n    # inflow_component = (inflow_amplitude * 0.5 * math.cos(inflow_freq * math.pi * t) + 0.5) * inflow * dt\r\n    velocity_tent = diffuse.explicit(velocity_tent, diffusivity, dt, substeps=1)\r\n    velocity_next, pressure = fluid.make_incompressible(velocity_tent, swarm,\r\n                                                        Solve(rel_tol=1e-05, abs_tol=1e-05, max_iterations=10_000))\r\n    return velocity_next, pressure\r\n\r\n\r\n# ------------- Plotting functions ----------------\r\ndef plot_scalar_field_with_patches(field, ax, title):\r\n    max_magnitude = np.max(np.abs(field.numpy()))\r\n    im = ax.imshow(field.numpy().T, origin='lower', cmap='coolwarm_r', extent=[0, length_x, 0, length_y], aspect=4,\r\n                   vmin=-max_magnitude, vmax=max_magnitude)\r\n    ax.set_title(title)\r\n    return im\r\n\r\n\r\n# ---- initial u and p vector field Generation ----\r\nboundary = {'x-': inflow_amplitude, 'x+': ZERO_GRADIENT, 'y': 0}\r\nvelocity = StaggeredGrid(0, boundary=boundary, bounds=box, x=resolution[0], y=resolution[1])\r\n# velocity, pressure = fluid.make_incompressible(velocity=velocity, obstacles=swarm,\r\n#                                                solve=Solve(rel_tol=1e-05, abs_tol=1e-05, max_iterations=100_000))\r\npressure = None\r\n\r\n# ----------------- Calculation --------------------\r\nfolder_name = f'{datetime.now().year}-{datetime.now().month}-{datetime.now().day}_{datetime.now().hour}-{datetime.now().minute}-{datetime.now().second}'\r\nos.makedirs(f'./run_{folder_name}', exist_ok=True)\r\nos.makedirs(f'./run_{folder_name}/velocity', exist_ok=True)\r\nos.makedirs(f'./run_{folder_name}/pressure', exist_ok=True)\r\nos.makedirs(f'./run_{folder_name}/figures', exist_ok=True)\r\nwith open(f'./run_{folder_name}/configuration.txt', 'w') as f:\r\n    f.write(f'{length_x=}\\n')\r\n    f.write(f'{length_y=}\\n')\r\n    f.write(f'{resolution=}\\n')\r\n    f.write(f'{dx=}\\n')\r\n    f.write(f'{dy=}\\n')\r\n    f.write(f'{swarm_num_x=}\\n')\r\n    f.write(f'{swarm_num_y=}\\n')\r\n    f.write(f'{swarm_member_rad=}\\n')\r\n    f.write(f'{inflow_freq=}\\n')\r\n    f.write(f'{inflow_amplitude=}\\n')\r\n    f.write(f'{diffusivity=}\\n')\r\n    f.write(f'{dt=}\\n')\r\n    f.write(f'{total_time=}\\n')\r\n\r\nfor time_step in range(1, int(total_time/dt)+1):\r\n    print('Time Step:', time_step * dt)\r\n    calc_start = datetime.now()\r\n    velocity, pressure = step(velocity, dt, time_step * dt)\r\n    print('Calculation time:', datetime.now() - calc_start)\r\n    fig, axes = plt.subplots(3, 1, figsize=(10, 20))\r\n    fields = [velocity['x'], velocity['y'], pressure]\r\n    field_names = ['Velocity - x component', 'Velocity - y component', 'Pressure']\r\n    ax_handlers = []\r\n    # Velocity - x component\r\n    ax_handlers.append(\r\n        plot_scalar_field_with_patches(field=fields[0], ax=axes[0], title=field_names[0]))\r\n    fig.colorbar(ax_handlers[-1], ax=axes[0], orientation='vertical', pad=0.04, fraction=0.02)\r\n    # Velocity - y component\r\n    ax_handlers.append(\r\n        plot_scalar_field_with_patches(field=fields[1], ax=axes[1], title=field_names[1]))\r\n    fig.colorbar(ax_handlers[-1], ax=axes[1], orientation='vertical', pad=0.04, fraction=0.02)\r\n    # Pressure\r\n    ax_handlers.append(\r\n        plot_scalar_field_with_patches(field=fields[2], ax=axes[2], title=field_names[2]))\r\n    fig.colorbar(ax_handlers[-1], ax=axes[2], orientation='vertical', pad=0.04, fraction=0.02)\r\n    plt.savefig(f'./run_{folder_name}/figures/timestep_{time_step * dt:.3f}.jpg', dpi=300)\r\n    plt.close(fig)\r\n    del fig, axes\r\n    phi.field.write(velocity, f'./run_{folder_name}/velocity/{time_step}')\r\n    phi.field.write(pressure, f'./run_{folder_name}/pressure/{time_step}')\r\n\r\nvelocity_file_list = sorted(glob.glob(f'./run_{folder_name}/velocity/*.npz'))\r\npressure_file_list = sorted(glob.glob(f'./run_{folder_name}/pressure/*.npz'))\r\nvelocity_data = [np.load(file) for file in velocity_file_list]\r\npressure_data = [np.load(file) for file in pressure_file_list]\r\nfig, ax = plt.subplots(nrows=3, figsize=(10, 20))\r\nim1 = ax[0].imshow(velocity_data[0]['data'][:,:,0].T, origin='lower', cmap='viridis')\r\nim2 = ax[1].imshow(velocity_data[0]['data'][:,:,1].T, origin='lower', cmap='viridis')\r\nim3 = ax[2].imshow(pressure_data[0]['data'].T, origin='lower', cmap='viridis')\r\n\r\n\r\ndef update(frame):\r\n    im1.set_data(velocity_data[frame]['data'][:,:,0].T)\r\n    im2.set_data(velocity_data[frame]['data'][:,:,1].T)\r\n    im3.set_data(pressure_data[frame]['data'].T)\r\n    return [im1, im2, im3]\r\n\r\n\r\nani = animation.FuncAnimation(fig, update, frames=len(pressure_data), interval=200, blit=True)\r\nani.save(f'./run_{folder_name}/animation.gif', writer='pillow')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	
+++ b/main.py	
@@ -24,27 +24,29 @@
 inflow_amplitude = 0.05  # m/s
 diffusivity = 2.3e-09  # m^2/s
 dt = 0.05  # s
-total_time = 10  # s
+total_time = 2  # s
 
 # -------------- Container Generation --------------
-box = Box['x,y', 0:length_x, 0:length_y]
+domain = Box(x=length_x, y=length_y)
 
 # -------------- Swarm Generation ------------------
 swarm = []
 
+
 # for i in np.linspace(3.5, 3.8, swarm_num_x):
 #     for j in np.linspace(length_y / (swarm_num_y * 2), length_y - length_y / (swarm_num_y * 2), swarm_num_y):
 #         swarm.append(Obstacle(Sphere(x=i, y=j, radius=swarm_member_rad)))
 
 
 # -------------- Step Definition -------------------
-def step(velocity_prev, dt, t):
-    velocity_tent = advect.semi_lagrangian(velocity_prev, velocity_prev, dt)
-    # inflow_component = (inflow_amplitude * 0.5 * math.cos(inflow_freq * math.pi * t) + 0.5) * inflow * dt
-    velocity_tent = diffuse.explicit(velocity_tent, diffusivity, dt, substeps=1)
-    velocity_next, pressure = fluid.make_incompressible(velocity_tent, swarm,
-                                                        Solve(rel_tol=1e-05, abs_tol=1e-05, max_iterations=10_000))
-    return velocity_next, pressure
+def step(v, p, dt):
+    start = datetime.now()
+    v = advect.mac_cormack(v, v, dt)
+    print(f'macCormack calculation:',datetime.now()-start)
+    start = datetime.now()
+    v, p = fluid.make_incompressible(v, swarm, Solve(x0=p, rel_tol=1e-03, abs_tol=1e-03, max_iterations=10_000))
+    print(f'make incompressible calculation:', datetime.now() - start)
+    return v, p
 
 
 # ------------- Plotting functions ----------------
@@ -57,11 +59,12 @@
 
 
 # ---- initial u and p vector field Generation ----
-boundary = {'x-': inflow_amplitude, 'x+': ZERO_GRADIENT, 'y': 0}
-velocity = StaggeredGrid(0, boundary=boundary, bounds=box, x=resolution[0], y=resolution[1])
-# velocity, pressure = fluid.make_incompressible(velocity=velocity, obstacles=swarm,
-#                                                solve=Solve(rel_tol=1e-05, abs_tol=1e-05, max_iterations=100_000))
-pressure = None
+left_boundary = math.tensor(np.concatenate([np.zeros(20), np.ones(60), np.zeros(20)]), spatial(y=100))
+# left_boundary = math.zeros(spatial(x=1, y=100))
+print(left_boundary)
+boundary = {'x-': 1, 'x+': ZERO_GRADIENT, 'y': 0, 'obstacle': 0}
+v = StaggeredGrid(0, boundary=boundary, bounds=domain, x=resolution[0], y=resolution[1])
+p = None
 
 # ----------------- Calculation --------------------
 folder_name = f'{datetime.now().year}-{datetime.now().month}-{datetime.now().day}_{datetime.now().hour}-{datetime.now().minute}-{datetime.now().second}'
@@ -84,46 +87,38 @@
     f.write(f'{dt=}\n')
     f.write(f'{total_time=}\n')
 
-for time_step in range(1, int(total_time/dt)+1):
+for time_step in range(1, int(total_time / dt) + 1):
     print('Time Step:', time_step * dt)
-    calc_start = datetime.now()
-    velocity, pressure = step(velocity, dt, time_step * dt)
-    print('Calculation time:', datetime.now() - calc_start)
+    v, p = step(v, p, dt)
     fig, axes = plt.subplots(3, 1, figsize=(10, 20))
-    fields = [velocity['x'], velocity['y'], pressure]
-    field_names = ['Velocity - x component', 'Velocity - y component', 'Pressure']
-    ax_handlers = []
     # Velocity - x component
-    ax_handlers.append(
-        plot_scalar_field_with_patches(field=fields[0], ax=axes[0], title=field_names[0]))
-    fig.colorbar(ax_handlers[-1], ax=axes[0], orientation='vertical', pad=0.04, fraction=0.02)
+    im_vx = plot_scalar_field_with_patches(field=v['x'], ax=axes[0], title='Velocity - x component')
+    fig.colorbar(im_vx, ax=axes[0], orientation='vertical', pad=0.04, fraction=0.02)
     # Velocity - y component
-    ax_handlers.append(
-        plot_scalar_field_with_patches(field=fields[1], ax=axes[1], title=field_names[1]))
-    fig.colorbar(ax_handlers[-1], ax=axes[1], orientation='vertical', pad=0.04, fraction=0.02)
+    im_vy = plot_scalar_field_with_patches(field=v['y'], ax=axes[1], title='Velocity - y component')
+    fig.colorbar(im_vy, ax=axes[1], orientation='vertical', pad=0.04, fraction=0.02)
     # Pressure
-    ax_handlers.append(
-        plot_scalar_field_with_patches(field=fields[2], ax=axes[2], title=field_names[2]))
-    fig.colorbar(ax_handlers[-1], ax=axes[2], orientation='vertical', pad=0.04, fraction=0.02)
+    im_p = plot_scalar_field_with_patches(field=p, ax=axes[2], title='Pressure')
+    fig.colorbar(im_p, ax=axes[2], orientation='vertical', pad=0.04, fraction=0.02)
     plt.savefig(f'./run_{folder_name}/figures/timestep_{time_step * dt:.3f}.jpg', dpi=300)
     plt.close(fig)
     del fig, axes
-    phi.field.write(velocity, f'./run_{folder_name}/velocity/{time_step}')
-    phi.field.write(pressure, f'./run_{folder_name}/pressure/{time_step}')
+    phi.field.write(v, f'./run_{folder_name}/velocity/{time_step:04}')
+    phi.field.write(p, f'./run_{folder_name}/pressure/{time_step:04}')
 
 velocity_file_list = sorted(glob.glob(f'./run_{folder_name}/velocity/*.npz'))
 pressure_file_list = sorted(glob.glob(f'./run_{folder_name}/pressure/*.npz'))
 velocity_data = [np.load(file) for file in velocity_file_list]
 pressure_data = [np.load(file) for file in pressure_file_list]
 fig, ax = plt.subplots(nrows=3, figsize=(10, 20))
-im1 = ax[0].imshow(velocity_data[0]['data'][:,:,0].T, origin='lower', cmap='viridis')
-im2 = ax[1].imshow(velocity_data[0]['data'][:,:,1].T, origin='lower', cmap='viridis')
+im1 = ax[0].imshow(velocity_data[0]['data'][:, :, 0].T, origin='lower', cmap='viridis')
+im2 = ax[1].imshow(velocity_data[0]['data'][:, :, 1].T, origin='lower', cmap='viridis')
 im3 = ax[2].imshow(pressure_data[0]['data'].T, origin='lower', cmap='viridis')
 
 
 def update(frame):
-    im1.set_data(velocity_data[frame]['data'][:,:,0].T)
-    im2.set_data(velocity_data[frame]['data'][:,:,1].T)
+    im1.set_data(velocity_data[frame]['data'][:, :, 0].T)
+    im2.set_data(velocity_data[frame]['data'][:, :, 1].T)
     im3.set_data(pressure_data[frame]['data'].T)
     return [im1, im2, im3]
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"011fd143-0d4d-4ffe-82c4-bf547896fdff\" name=\"Changes\" comment=\"Boundary flow working - m\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2l3RnqgXwcP6L1QoahlIxxiqjOw\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.main.executor\": \"Run\",\r\n    \"Python.trial.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"bondary-source\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Thesis\\phiflow_sim\\trial_1\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"phiflow_sim\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"011fd143-0d4d-4ffe-82c4-bf547896fdff\" name=\"Changes\" comment=\"\" />\r\n      <created>1724406942934</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1724406942934</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Initial commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724407810090</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724407810090</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Radial constant inflow\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724875604415</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724875604415</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Radial constant inflow - not working\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724920108013</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724920108013</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Rectengular flow working - cm\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724925878213</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724925878213</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Boundary flow working - cm\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724936337589</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724936337589</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Boundary flow working - m\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724952659420</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724952659420</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/constant_x\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Initial commit\" />\r\n    <MESSAGE value=\"Radial constant inflow\" />\r\n    <MESSAGE value=\"Radial constant inflow - not working\" />\r\n    <MESSAGE value=\"Rectengular flow working - cm\" />\r\n    <MESSAGE value=\"Boundary flow working - cm\" />\r\n    <MESSAGE value=\"Boundary flow working - m\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Boundary flow working - m\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -140,7 +140,15 @@
       <option name="project" value="LOCAL" />
       <updated>1724952659420</updated>
     </task>
-    <option name="localTasksCounter" value="7" />
+    <task id="LOCAL-00007" summary="Boundary flow working - m">
+      <option name="closed" value="true" />
+      <created>1725024557574</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1725024557574</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
